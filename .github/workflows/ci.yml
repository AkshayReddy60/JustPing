name: CI for Microservices

on:
  push:
    branches:
      - main
      - '**'
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - uses: actions/checkout@v3

      - id: detect
        name: Detect changed service directories
        run: |
          changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^services/' | cut -d/ -f2 | sort -u | uniq)
          if [ -z "$changed" ]; then
            echo "No services changed."
            echo '[]' > services.json
          else
            echo "$changed" | jq -R -s -c 'split("\n") | map(select(. != ""))' > services.json
          fi

      - id: set-services
        run: |
          echo "services=$(cat services.json)" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine language and build
        working-directory: ./services/${{ matrix.service }}
        run: |
          if [ -f "package.json" ]; then
            echo "Node.js service detected"
            npm install
            npm test || echo "No tests"
            docker build -t ${{ matrix.service }} .
          elif [ -f "requirements.txt" ]; then
            echo "Python service detected"
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            docker build -t ${{ matrix.service }} .
          elif [ -f "pom.xml" ]; then
            echo "Java service detected"
            mvn clean package
            docker build -t ${{ matrix.service }} .
          else
            echo "No recognizable service in ${{ matrix.service }}"
            exit 1
